<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.shop.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.neu.shop.pojo.Goods">
    <id column="goodsId" jdbcType="INTEGER" property="goodsid" />
    <result column="goodsName" jdbcType="VARCHAR" property="goodsname" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="upTime" jdbcType="TIMESTAMP" property="uptime" />
    <result column="category" jdbcType="INTEGER" property="category" />
    <result column="detailCate" jdbcType="VARCHAR" property="detailcate" />
    <result column="activityId" jdbcType="INTEGER" property="activityid" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.neu.shop.pojo.Goods">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    goodsId, goodsName, price, num, upTime, category, detailCate, activityId
  </sql>
  <sql id="Blob_Column_List">
    description
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.neu.shop.pojo.GoodsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.neu.shop.pojo.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.neu.shop.pojo.GoodsExample">
    delete from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.neu.shop.pojo.Goods">
    insert into goods (goodsId, goodsName, price, 
      num, upTime, category, 
      detailCate, activityId, description
      )
    values (#{goodsid,jdbcType=INTEGER}, #{goodsname,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{uptime,jdbcType=TIMESTAMP}, #{category,jdbcType=INTEGER}, 
      #{detailcate,jdbcType=VARCHAR}, #{activityid,jdbcType=INTEGER}, #{description,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.neu.shop.pojo.Goods">
    insert into goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        goodsId,
      </if>
      <if test="goodsname != null">
        goodsName,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="uptime != null">
        upTime,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="detailcate != null">
        detailCate,
      </if>
      <if test="activityid != null">
        activityId,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsid != null">
        #{goodsid,jdbcType=INTEGER},
      </if>
      <if test="goodsname != null">
        #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="uptime != null">
        #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null">
        #{category,jdbcType=INTEGER},
      </if>
      <if test="detailcate != null">
        #{detailcate,jdbcType=VARCHAR},
      </if>
      <if test="activityid != null">
        #{activityid,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.neu.shop.pojo.GoodsExample" resultType="java.lang.Long">
    select count(*) from goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods
    <set>
      <if test="record.goodsid != null">
        goodsId = #{record.goodsid,jdbcType=INTEGER},
      </if>
      <if test="record.goodsname != null">
        goodsName = #{record.goodsname,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.uptime != null">
        upTime = #{record.uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.detailcate != null">
        detailCate = #{record.detailcate,jdbcType=VARCHAR},
      </if>
      <if test="record.activityid != null">
        activityId = #{record.activityid,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update goods
    set goodsId = #{record.goodsid,jdbcType=INTEGER},
      goodsName = #{record.goodsname,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      upTime = #{record.uptime,jdbcType=TIMESTAMP},
      category = #{record.category,jdbcType=INTEGER},
      detailCate = #{record.detailcate,jdbcType=VARCHAR},
      activityId = #{record.activityid,jdbcType=INTEGER},
      description = #{record.description,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods
    set goodsId = #{record.goodsid,jdbcType=INTEGER},
      goodsName = #{record.goodsname,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      upTime = #{record.uptime,jdbcType=TIMESTAMP},
      category = #{record.category,jdbcType=INTEGER},
      detailCate = #{record.detailcate,jdbcType=VARCHAR},
      activityId = #{record.activityid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.neu.shop.pojo.Goods">
    update goods
    <set>
      <if test="goodsname != null">
        goodsName = #{goodsname,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="uptime != null">
        upTime = #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="detailcate != null">
        detailCate = #{detailcate,jdbcType=VARCHAR},
      </if>
      <if test="activityid != null">
        activityId = #{activityid,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.neu.shop.pojo.Goods">
    update goods
    set goodsName = #{goodsname,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      upTime = #{uptime,jdbcType=TIMESTAMP},
      category = #{category,jdbcType=INTEGER},
      detailCate = #{detailcate,jdbcType=VARCHAR},
      activityId = #{activityid,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neu.shop.pojo.Goods">
    update goods
    set goodsName = #{goodsname,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      upTime = #{uptime,jdbcType=TIMESTAMP},
      category = #{category,jdbcType=INTEGER},
      detailCate = #{detailcate,jdbcType=VARCHAR},
      activityId = #{activityid,jdbcType=INTEGER}
    where goodsId = #{goodsid,jdbcType=INTEGER}
  </update>
</mapper>